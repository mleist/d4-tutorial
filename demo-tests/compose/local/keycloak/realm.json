{
  "id": "demo-tests-realm",
  "realm": "demo-tests-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "84f5b1d0-dc16-48e4-894c-08bfebd8513d",
        "name": "default-roles-demo-tests-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "demo-tests-realm",
        "attributes": {}
      },
      {
        "id": "485fc4e7-3164-4b25-9202-53173d12a63e",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "demo-tests-realm",
        "attributes": {}
      },
      {
        "id": "ee512a96-6651-4a93-ac2b-7505e3a0cf6a",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "demo-tests-realm",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "38a08bb4-a629-4ea5-86ca-04dca55b6b5c",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "e0840e77-058d-4526-84e7-db992cf1e66e",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "1bcbf080-0823-4f89-bfb8-326430a238d9",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "09ba06ed-db32-4321-811e-c6aee2ad7734",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "08a233ae-51d2-49ef-ae63-62f36446e54b",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "c9a77941-fb3f-47d0-bf7a-03c0bb260de7",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "view-events",
                "view-clients",
                "view-identity-providers",
                "create-client",
                "manage-realm",
                "query-users",
                "impersonation",
                "query-clients",
                "query-groups",
                "view-realm",
                "manage-clients",
                "manage-identity-providers",
                "view-authorization",
                "manage-events",
                "manage-authorization",
                "view-users",
                "manage-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "69105ef5-72f3-47a2-95b0-f59ac9fdd044",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "97c0b387-f750-49a8-b4d5-1fb3cd967415",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "5a041715-b642-4ec3-9ae9-464befe015bb",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "e6b697b5-756f-41b0-8bda-ac66db45257f",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "2f2f8c11-253f-4711-84eb-987ca54dbaa5",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "9322c60a-f4ca-40aa-b895-00a41a1fd793",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "9e7bf2b0-a5be-4426-a0ea-53be5a63c8fe",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "d39ae76a-4f31-4524-990b-a3a06c21737f",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "274b6115-119b-4cdc-bde2-4fde68d39c96",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "c074f94a-6e12-4280-b0bc-552235dfb86d",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "17fa99b4-5845-43b0-ad08-0fa46ef6a63d",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "ff5582e4-9b00-4734-95fb-23eb345579f6",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        },
        {
          "id": "1c10a3c8-c227-4052-95b0-0d0018a9cc05",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6e117ef1-3171-402d-82d5-36331c3e6682",
          "attributes": {}
        }
      ],
      "d4-client": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "02f52419-1fb1-4e33-965e-741b65d1f5f0",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "24952bc1-2d6f-432d-9f00-81b6b4e08250",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "a6f195bc-7d40-4929-8be2-06bf604cfec3",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "9798a6b5-d9b7-4230-a390-d40663b51ba4",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "f048c24b-600b-49de-bccb-012e744c006d",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "e44c4e11-5dd2-4c86-9c31-8f0b1d2296a8",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "f70ae680-0b47-4004-b336-41fde0ab82b0",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "6917dbd1-36ba-4599-8564-e859346c1621",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        },
        {
          "id": "d4645097-66a2-4858-a353-00640d0ed3c4",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c881d19-c61f-4113-a5b6-766af2120404",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "84f5b1d0-dc16-48e4-894c-08bfebd8513d",
    "name": "default-roles-demo-tests-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "demo-tests-realm"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "503210a6-ea49-4d95-af8f-68fd496894d3",
      "createdTimestamp": 1638264892234,
      "username": "alice",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "email": "alice@example.com",
      "attributes": {
        "hr": [
          "false"
        ],
        "uuu": [
          "uuu"
        ],
        "subordinates": [
          "[]"
        ],
        "user": [
          "alice"
        ]
      },
      "credentials": [
        {
          "id": "a9736c7e-30f5-4942-8694-ee133032a2cf",
          "type": "password",
          "createdDate": 1638265948913,
          "secretData": "{\"value\":\"oACk7UORFGfTVz8YA1Jwao8QA+IXI8cxcFj1JJVUbmQdl0TJ+MilmuUSQNBVXQ7p3jVtNGdgyt3w960ocDqazA==\",\"salt\":\"XDVtnB5WdqYAg2rp05wrjg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-demo-tests-realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7a8b7f88-f664-4815-a3c1-adc7f42dc409",
      "createdTimestamp": 1638265021348,
      "username": "betty",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "attributes": {
        "hr": [
          "false"
        ],
        "subordinates": [
          "[\"charlie\"]"
        ],
        "user": [
          "betty"
        ]
      },
      "credentials": [
        {
          "id": "ee75d7b6-d265-4133-8fdb-30c08df11616",
          "type": "password",
          "createdDate": 1638265987503,
          "secretData": "{\"value\":\"Im/O1WOra2nAtsKRRhqkhAP08u+xxvH+QTdiT2uQay0d63U5K2suwnUHTltetv4Eog6/E/HQdwp6nvP3kPj9ag==\",\"salt\":\"TO1p/bciVKpwWtYK3iRUgA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-demo-tests-realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a4a27a79-693c-40ef-8a23-56d9c94426ba",
      "createdTimestamp": 1638265170739,
      "username": "bob",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "attributes": {
        "hr": [
          "false"
        ],
        "user": [
          "bob"
        ],
        "subordinates": [
          "[\"alice\"]"
        ]
      },
      "credentials": [
        {
          "id": "d5ffba17-22a5-459a-b3a6-717976eca44a",
          "type": "password",
          "createdDate": 1638266001102,
          "secretData": "{\"value\":\"uNPzVfC7KfYJ80kbEJ+At7C5UqGAOSXitr+MiwMJzl3s4F1BTxwJubcUo78MMcmwLSA98xXns/2htBPPt1aCuw==\",\"salt\":\"he0bpQRXFhFxaVWScvBqug==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-demo-tests-realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f86ec241-2668-43be-8654-8e6830b5761f",
      "createdTimestamp": 1638265281769,
      "username": "charlie",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "attributes": {
        "hr": [
          "false"
        ],
        "subordinates": [
          "[]"
        ],
        "user": [
          "charlie"
        ]
      },
      "credentials": [
        {
          "id": "94599212-0dda-4a5c-9c74-ec38a3ce0819",
          "type": "password",
          "createdDate": 1638266025066,
          "secretData": "{\"value\":\"o5GYuj4Q347cyHm2PYugDwQjQLFuA2ByuefT3ZJiL8UM1xnFlAJJJmWgr4rjM8ECCOSf62Oxo1AGdCoZDrxmVw==\",\"salt\":\"/TP422/yILV3/0v+cLGrug==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-demo-tests-realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "33523a96-6e56-4ada-8302-39611697c95d",
      "createdTimestamp": 1638265384128,
      "username": "david",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "attributes": {
        "hr": [
          "false"
        ],
        "subordinates": [
          "[]"
        ],
        "user": [
          "david"
        ]
      },
      "credentials": [
        {
          "id": "772e6a5f-4bc0-4dbd-8932-fc57dbc194c3",
          "type": "password",
          "createdDate": 1638266045572,
          "secretData": "{\"value\":\"4ze0B7jgOEZclZLs+N7rcGJpnUYldTV28fXG821mk3Vnym9N+auw04PuztSsk+bfV93LS46TPKTJnLGs6AS1cg==\",\"salt\":\"xF7uuK3BIp6tiy0fZLhrJA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-demo-tests-realm"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "0c881d19-c61f-4113-a5b6-766af2120404",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/demo-tests-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/demo-tests-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "700bed34-9348-4011-b887-a5fa10efc054",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/demo-tests-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/demo-tests-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c5857e7b-bab8-4227-a8c9-a3f3638a8937",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "df3904ca-2108-4a95-87b1-06f563c6a7ac",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "24952bc1-2d6f-432d-9f00-81b6b4e08250",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fb9af494-1c6a-479e-959f-059bc1e61d5f",
      "clientId": "d4-client",
      "rootUrl": "http://spot:9040",
      "adminUrl": "http://spot:9040",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "1f02bb76-eb58-40e2-928d-13f5c35794c1",
      "redirectUris": [
        "http://localhost:9010/*",
        "http://127.0.0.1:9010/*",
        "http://localhost:9020/*",
        "http://127.0.0.1:9020/*",
        "http://localhost:9030/*",
        "http://127.0.0.1:9030/*",
        "http://localhost:9040/*",
        "http://127.0.0.1:9040/*",
        "http://localhost:9050/*",
        "http://127.0.0.1:9050/*"
      ],
      "webOrigins": [
        "http://spot:9040/*",
        "http://127.0.0.1:9010/*",
        "http://127.0.0.1:9020/*",
        "http://127.0.0.1:9030/*",
        "http://127.0.0.1:9040/*",
        "http://127.0.0.1:9050/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "dab5b651-74a7-4402-a2de-d61b5d915f6d",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b5dd3f5-17c4-4cdb-aab9-de107242f342",
          "name": "user",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "user",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "user",
            "jsonType.label": "String"
          }
        },
        {
          "id": "56787f1c-3dbd-40ad-b5b2-92095da03a70",
          "name": "subordinates",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "subordinates",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "subordinates",
            "jsonType.label": "JSON"
          }
        },
        {
          "id": "6e5a9449-5c83-45a8-b731-26c60df7cf34",
          "name": "hr",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "hr",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "hr",
            "jsonType.label": "boolean"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6e117ef1-3171-402d-82d5-36331c3e6682",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fb75c960-f7e6-40a2-b702-55fc7439eef1",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/demo-tests-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/demo-tests-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "45e79ee8-0147-484e-bbfb-21cb9be173ff",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "62f3ab57-b7eb-4bc0-80bb-4432405e91b7",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "59f59fdd-4e72-48c7-aed7-37858cdb3ead",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "5ef08067-819b-4c29-bf4d-ec46bdb29f4c",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "ab1e0c8b-d64f-4cfa-935d-3e5ba14de419",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "43c36659-4f12-499d-8e55-33d3f447cd16",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "109daae1-23e3-4e23-96c7-03afe62fd5f4",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "08217a05-237f-4d0c-aa28-cec44c5c12d3",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "78a2838a-a171-43e9-8873-ac3380d7a1b5",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "8df45a19-493f-4c84-900f-6ab08f0d83ff",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b40c1c5d-a487-402a-9f97-156cafb05371",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "a18cc8f6-7fe3-4b37-9924-b35b4ff597a3",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c3132031-9785-47f1-aca8-d326dcffa8e3",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e41f56b5-8375-47ae-99cd-307b2261a5af",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "deb6e474-23e8-490e-8204-1b73907e314f",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b149155b-5bc1-4e17-a0cf-ca54b11ffbf2",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ebf36396-2445-43b4-a32e-73a8a8450f18",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "556560cd-0a3e-4e83-aa5a-33f8ba5c0d5e",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d12a9121-09e8-4782-a471-50374521371c",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f854b6af-ade5-4c6a-b4c1-9cbaab28cadf",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2e05c7d9-1b00-42b2-ac16-fc3b0de15bc8",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "af2b5f00-c9fd-4471-86f8-aa77dc6ef620",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "adb14e62-8c69-45e2-994e-78594b0f14d7",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "34dfd843-b98f-417d-bfb9-375c8ecabc4e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cf65f1dd-f386-4378-9ad2-a8715d1406dc",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "50607b2f-42ce-4256-a0e8-a5dcfc1d0da5",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "189e5ac3-f94f-4e42-9bb2-1ec5c693904a",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "39ff9765-1ba6-4db4-ba20-efaee911db0c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c8ce716-707e-4cb1-9962-c12c39b0fb1e",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9308bd9d-268e-4754-b4ac-3fa0fa5c7654",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0a8d6f99-dc47-4ad8-a7f2-cf8ff05b9a69",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "609b78f9-f961-405e-abad-0740c1f0d689",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "0a17fcee-bda6-4df0-aaf1-b208e2f49367",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "59aa5134-a693-43c1-a865-0037f539abab",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "be962ca9-7fdf-4a96-91d4-5e2f06b609f1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "d5dde356-ce84-4aae-8bb3-d9760a28404a",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e1f286e1-916d-47d0-a835-35b7d8e97960",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "6696b060-22dd-44a8-857b-d06c2818dac5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "fdb5c573-959f-4de8-8031-2e4bc26da08d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "6ec6d0e7-a9d9-4feb-a6fd-a38e67f61301",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "f568fdb2-05c3-497c-9124-4c4c76472c1a",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "0714dd84-1796-4fd9-81b5-feb632b1dc51",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "4b94c880-90ec-4506-9e29-076e3bc72fb5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "d85aa09a-61ce-4f20-9011-316153407e06",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "1567341f-6726-4613-b3f4-70913b692ec6",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "d9fe711f-aaa7-4461-947e-06d50805bc04"
          ],
          "secret": [
            "cU3Z3kUrpb96mpumny7HdQ"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f400e357-5341-4b1b-af2e-8a865907c2ef",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAuFnEx4K3Z21ygyIBzaBkapbcPyBuSmEe7vUyrhwVec4fI4XeQMOsAX03pom1oxv+UuY4ABHqgY3rkS4dtE1UaCd5F+6BCnnX6xR24QjHo0x3tcwqWyDAbCPYiXcVe0srFkynlQebnleNv/StWSaCQag/PZ/DyOHXt/YBNBH+NySpEn3HQoU3lmb1cvTapy4YxezahtEmmE/yR9RP32lrm7u7tQRMQdDk0cy0LmkBodms+yVtTQwM7clhuxLLxkGaSofi0OGenRYsg1Kb2zXG9FONCSYFySlwqbr4He2hzdASV8cy3VdWzfcYKcG4YfO3n12/IVmGbkMg3CN5LqFNVwIDAQABAoIBAQCUIO2RMmOUY8lDvSudwmdtjlLjFngIpAlrEPLsG/zVpt42ePahK5kmiSsSUkz1ByVQD1SoGb1I5HSIb3nGyuwr1KvkouxlMopghk0PfTKM8ICwP6E5IBP90L/JlTpZm4i/nlB522cb0FZCC6TOobbAcyR9q8Zxv6bKVo2Y/Ww7eYcLHmc+FuJ+LZFwpzlR5T33Fzh/e3yM8oahIKoRSlqiS1BRBlIePa8+xJaSpELA8Q6sSBpKg3SZMLkj5s3rQfEwU9ybrlW3gq7cI5gWlsVcM2ZglKgRXGCjMIyHlYhrQOQ7iwJYwn7n4FeU/FR1v08JrUzjpehTXtmftjrPTUSBAoGBAO6NacvAlXlWK5MrcDkBJ8sMV1+ZQcHuIS4R8JrBEXaRZalgv1b6PhElG195ETfQxVhsssKrqVjgW7qZyG5LFyDUvSkk9LjbYl5uG0j2VTBFAJpwtrWJoxzpMmPg7H1LrCFvg/n7mZ6djtTHVhvdfLqJhJn0bxJzBgrAasYK927HAoGBAMXVf2NOJI3ne39g5ChXkauROo4WjSMrk9ihRV3gY18/oHoRu8Y3/6f1el8TmdaCP488h6yyx+Hw0Uy5kYbe3RlAkIA7V1DfeLLYb97GPJre4k6Iq1GyXh+j52qG7R0dgOmX+c5mPRbRnTdIbBIxBnkflrnyx5Zf0JNdHg6QidzxAoGAQtoCcgUwXmaVo5KiynbWbgKxYasTUIOpbL2+TcAZYr7wXH0uYfOS/T8G4sSM3LV2+IbNudxdgvis/CgokTAd9SdpM2SV6FAiyw/UOag+y14rAxzfNxSxT2LSqkbYP2y7ektEEwQ9UsQYyOxr5zc0wxnSvUpQ7jypzs2JnqJoIPUCgYAMGUp5IEZMB2QeHibV8MUP4QnbtrVa+UdJcFN1skthf9qonH0HWlVgSDr7pY869yw77k+92BExWDD0qESmIusSqEguD3L/lysihOoSjb0XG5prgyA3Ftl6xeNZOHc32J4RqyGz5bzGsHsU7nDti+IBdlUZeieKosF2wbMc4OoNgQKBgQCZFygAYoPeEfcSWJ5S8BIdwci8lOAYsKyluVfsdSxveS229tzdwoMWBU87MzPC844IrtGygiNS88oA9eiaVxAXdW7PAolTagQ1Ffwl9dt5pDCQcqFFMni3KpwzZKe8sTojdU34lZZxbo78gKuY2lS7GpmjSJVWdm/FglB1tn1uCg=="
          ],
          "keyUse": [
            "sig"
          ],
          "certificate": [
            "MIICqTCCAZECBgF9cCkC2jANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1leGFtcGxlLXJlYWxtMB4XDTIxMTEzMDA5MjI1NVoXDTMxMTEzMDA5MjQzNVowGDEWMBQGA1UEAwwNZXhhbXBsZS1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALhZxMeCt2dtcoMiAc2gZGqW3D8gbkphHu71Mq4cFXnOHyOF3kDDrAF9N6aJtaMb/lLmOAAR6oGN65EuHbRNVGgneRfugQp51+sUduEIx6NMd7XMKlsgwGwj2Il3FXtLKxZMp5UHm55Xjb/0rVkmgkGoPz2fw8jh17f2ATQR/jckqRJ9x0KFN5Zm9XL02qcuGMXs2obRJphP8kfUT99pa5u7u7UETEHQ5NHMtC5pAaHZrPslbU0MDO3JYbsSy8ZBmkqH4tDhnp0WLINSm9s1xvRTjQkmBckpcKm6+B3toc3QElfHMt1XVs33GCnBuGHzt59dvyFZhm5DINwjeS6hTVcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAonuSoLujNhEV79o3TV6NjHhdA1MvjjpyxOfxKSqkseKFqXXPXKgVrK1XHFZcZpT6XIy68u82JKKNmL2EPl6KZsd85D1Ga3+SS/Wqvcd4pyzWScK5w53DcBKrKZGRMECxPLEL8Aplr2jGUvpBimsZK0WDlEpQjtROpE4iLaGm3MXuYbDLziC42sjeBQo90YUJp1FFko42mAJ/kCMDKOpkYn8O4or4H3zxeYIrQd8xBpUZWo9xv7EgV0uWcJzMQd5NDxxQKLWqy1I9eMQf3TAtnxQYiINlV19QgJlWFvsjkrlXtTFw/MAeIuKBr64lMjmhuoHXDWUTJbDP/XkIagS0rA=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d2fe9c25-e28c-4bf9-a33b-6fc320ffc4aa",
        "name": "rsa-enc-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAsI/S1cAeiWryxfNztD3Bu0UIB2B7rWqgy4Ub/Uh/LQ+ULJR0cjnWYRdW1J/+AyHX62lOB/8sAG/St2mCFKesJHQIvZa3h1kpTmUPX0W2yS1gzUXbfyKn1/Xd3WIQzN85CzFBEVRGYXAmYdQOkiYjcWNPsv6VPu26U2NKPzbNOkAGzaYTCW+768WlECNP5ysIu/gQRADu2t1Gz5WZSWxQ0nuETxlrSUwxihxXxgcGDwOxrYViHzcxL8YCW5k6DD9NkR7SgBPjrXskDBc89czymsfXy18amDxG7gQVeXLOUFMISycJPRbIaraAyUvGhyeJKbBalQ1jiBrnPbB9CbU6pQIDAQABAoIBAQCOsy9L4wLLPc0JgEI7os45dQmQLMLI3i0nUGXWyAlBeh3gCfwzddt2jU54evbpwSip82pFvE7r63T7GCMyXnIa5E1MLcwXcFCaM8PA1K9u2WYrghJtJq1RNj4i92dsrd2E1kIop1xa1DGxT5qXNIvg0MtRd8FYIvs8+jq/7KLiOBWcgIiCzF9PSBqeuN6oi7rZtoI8uuz1wCMOsNf2nD8t2S1XhQ8FtcdIfzIGCc9G4vlkcvlarl8MpeCqjspTdcfrUTTKbwsbUK1IxwgHV+4LfbHEgWE85uZ2dkpsTkS600C5rH/JVV5vHIqYfbhSqMdWiGsR5EEm9D8FigzUpeQBAoGBANXX23AM15E3hUMn6K04wLUhkpTsshS+fYe11lkZyNjERooT863o2/79nsWxK1IJMC8hhxmvazJMkMsuy2Ac1sWFyGxgGcAZoaPNAcqDlropD8AWAdy17wjQZhOpxXF4hyxAR9aXFvMnCVjgdN1xFTSfQAF9pUGVgoIaUOnC+6aFAoGBANNed130LjcFQdevm1lTxfwKIZsbn4mRlMpvXvFtrOANx6gQmr8kVHNcAxta5oDxcF81v+N0l7ZgV5oAEk2cC9/FACz/0/0YOEP/4nG4KB7U4FshG6NtG56O/43hpyvZa5sF5cOJPxcC+cgI9+0k6eCMrr7OuFjzxI9j5ll6hc2hAoGBAK+6kzmhVASh+4EUasDuwm4XCL4ZRL6HS+EaLOtLpSF9KfqOKtHfaepBwRf0YAUqR85zXvJclVrgUJyn97kj+dqX9fwZfQ/AAHT7I12ohVS2KZtQendFiwlTOI8wFHEK+woCSQavYsyuZ6AB1AelxidYNuECv6sFkhoYRiXTdbmBAoGAYLul82ix0dplFLm4Zfwx6rQURzEwJTxsFO09TU59RJjp29+lgn6064qbnWRPg4l7fQdTR1xvpjaXQNJxjfUxdfpppy55rSXtcilkT9kQ+3M/LlWLmZJwhnM5P4ya/jVlyq+7RG7GYdipycNY+73eDzczLf3bXlJJjboRjLfHDqECgYAsCZnzXyh4q3IIpfMqCYgI0f6RHHcRE8YkOEp4rtAkaOoz48k/i3Ak63bmoGgOQCW9EisJMDGsTCoPsGUjiH+YsbV16+iq/SLQjCtNxj7R4NdQ9d0aKjwuD0gEFG2K6ieFAk74w/GF+BZ3kc8TclaNkrGypaITiGqWbeGB56C1LQ=="
          ],
          "keyUse": [
            "enc"
          ],
          "certificate": [
            "MIICqTCCAZECBgF9cCkEGDANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1leGFtcGxlLXJlYWxtMB4XDTIxMTEzMDA5MjI1NVoXDTMxMTEzMDA5MjQzNVowGDEWMBQGA1UEAwwNZXhhbXBsZS1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALCP0tXAHolq8sXzc7Q9wbtFCAdge61qoMuFG/1Ify0PlCyUdHI51mEXVtSf/gMh1+tpTgf/LABv0rdpghSnrCR0CL2Wt4dZKU5lD19FtsktYM1F238ip9f13d1iEMzfOQsxQRFURmFwJmHUDpImI3FjT7L+lT7tulNjSj82zTpABs2mEwlvu+vFpRAjT+crCLv4EEQA7trdRs+VmUlsUNJ7hE8Za0lMMYocV8YHBg8Dsa2FYh83MS/GAluZOgw/TZEe0oAT4617JAwXPPXM8prH18tfGpg8Ru4EFXlyzlBTCEsnCT0WyGq2gMlLxocniSmwWpUNY4ga5z2wfQm1OqUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAPWo6HBb1pJHGLgO+dWzngmQd8CyGAZ7C51k0CaLJm5efZAG8u3OgaqqMyjWoC+7GTj5zXJzJCZJ1qYmYAG76EyohzDVw/HjICpdmSR7m1Dm/9mUfV9ZN6Op6ulEKhnkIvTJ92uhX3pE9DSBhBn2Wp2+R8HmTk8UhbPU/E3vzYjRT+QNpCGstlzAFwBQ7/HMA3xWz2z8ptgIlznh9QUzF6yCDU3QzEnYbffmdz/0F22/R3pZBBH/FgMmHzpANGPWeGsm7FQmL2dCp84U1tZW7sYXKrRyzUlyGz2t2OHUuFKRjplP4CEfLXRMPPpHpLx3+xjoQZJscAYCnQ6JT8ay/BA=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "3870f5c5-e997-4b5e-b1d7-9218a8ca8060",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "de733a57-d60f-43b7-9764-2136eaee4a79"
          ],
          "secret": [
            "a40GL2onpyYlKBtOPcSlq8896qoIBS0cj0_8R1i-psc3TueK7VdpEkvBX9klyLLsV6B5N8wYk2LZGrh24W1-UA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "fa064344-64ef-4cbb-9973-bc5428c370e8",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3baf8968-a6a6-4aec-8531-f27b15680449",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "852460f1-110b-44c8-8231-6cceb0af0e60",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7126000a-db5d-4fa6-ac21-d46fa0e0edcd",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "8e7971ba-3c68-4bb2-8766-a3f548544ced",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "42b24a0f-213c-46a8-ace6-5505037f0666",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6c3e1794-5d7b-4642-b453-18425303f12f",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "6cb53c3e-6799-4615-bdb2-74ab17b0f825",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "dcc040f9-ed93-43ab-b87d-331df6b959b0",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e95e0409-7916-41ca-ada0-dfc5a420f284",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d464b975-e52d-439a-8c39-3202ba053144",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b62160e2-3103-4409-819b-aa01fea8f069",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "836a0e34-7cf1-4f3a-84c3-632eb37a53c1",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c74484cb-51a5-4f82-95e5-265c99c3ed1f",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "c3c5dec4-7063-4df8-bb2d-48a1e612506e",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4bb08cda-9e56-4237-89f2-e8e90b1241f2",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "99a0baec-bf3c-4009-89c2-02f646a9c89d",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "55d3de56-2765-4ed4-a845-0dbf62c03c29",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "42ae6ab0-d2d5-484c-ba3e-05f666982792",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "bda6466c-ebf9-4e05-983d-9c6567177871",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "9a6e790f-e813-4699-ac02-e560c7b39c0a",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "d17f3682-70ec-400e-81ee-75a853042869",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "15.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}